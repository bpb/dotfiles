{{- /* macOS only, gated by profile.dev; assumes credsStore=osxkeychain already set */ -}}
{{- if and (eq .chezmoi.os "darwin") (.profile.dev) -}}
#!/usr/bin/env bash
set -euo pipefail
# --- ensure PATH has Homebrew + ~/.local/bin just for this script ------------
# Try to load your login profile (defines PATH), but don't require it.
if [ -r "$HOME/.zprofile" ]; then
  # shellcheck disable=SC1090
  . "$HOME/.zprofile"
fi

# Add common locations if still missing (idempotent)
add_path_front() {
  local d="$1"
  [ -d "$d" ] || return 0
  case ":$PATH:" in *":$d:"*) ;; *) PATH="$d:$PATH";; esac
}
add_path_front "/opt/homebrew/bin"     # Apple Silicon Homebrew
add_path_front "/usr/local/bin"        # Intel Homebrew
add_path_front "$HOME/.local/bin"

# If Homebrew exists, add its bin explicitly
if command -v brew >/dev/null 2>&1; then
  add_path_front "$(brew --prefix)/bin"
  add_path_front "$(brew --prefix)/sbin"
fi
export PATH
log()  { printf "\033[1;34m[dev-auth]\033[0m %s\n" "$*"; }
warn() { printf "\033[1;33m[warn]\033[0m %s\n" "$*"; }
err()  { printf "\033[1;31m[error]\033[0m %s\n" "$*" >&2; }

# ---- guards -----------------------------------------------------------------
if ! command -v docker >/dev/null 2>&1; then
  warn "docker not found; skipping container auth."
  exit 0
fi


# ---- helper: check if docker is logged in to Docker Hub ---------------------
is_dockerhub_logged_in() {
  docker info 2>/dev/null | grep -qE '^ Username:[[:space:]]+\S+'
}

# --- Docker Hub login --------------------------------------------------------
if ! hub_creds_present; then
  cat <<'NOTE'
Docker Hub login:
- If prompted, you may see a device login flow.
- Credentials will be stored in macOS Keychain via osxkeychain.
NOTE
  if docker login; then
    # accept “Login Succeeded” even if docker info doesn’t show Username
    if hub_creds_present; then
      log "Docker Hub login OK (credentials present in Keychain)."
    else
      warn "Login succeeded but no Keychain entry found yet. Retrying credential query..."
      sleep 1
      hub_creds_present \
        && log "Docker Hub credentials now present in Keychain." \
        || warn "Could not confirm Keychain entry; continuing (login returned success)."
    fi
  else
    err "Docker Hub login failed (docker login non-zero)."
    exit 1
  fi
else
  log "Docker Hub credentials already present in Keychain."
fi

# ---- GitHub CLI (gh) for repo + GHCR access --------------------------------
ensure_gh() {
  if command -v gh >/dev/null 2>&1; then return 0; fi
  if ! command -v brew >/dev/null 2>&1; then
    warn "gh not found and Homebrew missing; skipping GitHub auth."
    return 1
  fi
  log "Installing GitHub CLI (gh)..."
  brew install gh
}
if ensure_gh; then
  if ! gh auth status >/dev/null 2>&1; then
    log "GitHub login via device flow (requesting repo, read:packages)..."
    gh auth login -s "read:packages,repo" -w || {
      err "GitHub auth failed."
      exit 1
    }
  else
    if ! gh auth status -t 2>/dev/null | grep -q "read:packages"; then
      log "Refreshing GitHub token scopes to include read:packages..."
      gh auth refresh -s "read:packages,repo" -h github.com || {
        err "Failed to refresh GitHub token scopes."
        exit 1
      }
    fi
  fi
  log "GitHub auth OK."
else
  warn "Skipping GitHub login because gh installation was not possible."
fi

# ---- Docker login to GitHub Container Registry (ghcr.io) --------------------
login_ghcr() {
  if command -v gh >/dev/null 2>&1 && gh auth status >/dev/null 2>&1; then
    GH_USER="$(gh api user --jq .login)"
    GH_TOKEN="$(gh auth token)"
    if [[ -n "${GH_USER:-}" && -n "${GH_TOKEN:-}" ]]; then
      log "Logging into ghcr.io as $GH_USER using gh token..."
      if echo "$GH_TOKEN" | docker login ghcr.io -u "$GH_USER" --password-stdin; then
        log "ghcr.io login OK (stored in Keychain)."
        return 0
      fi
    fi
  fi
  cat <<'MSG'
GitHub Container Registry (ghcr.io) login:
- Username: your GitHub username
- Password: a GitHub **Personal Access Token** with 'read:packages'
Credentials will be stored securely in macOS Keychain.
MSG
  docker login ghcr.io || return 1
  log "ghcr.io login OK (stored in Keychain)."
  return 0
}

has_ghcr_creds() {
  # Ask helper whether ghcr.io entry exists
  if command -v docker-credential-osxkeychain >/dev/null 2>&1; then
    if printf "list\n" | docker-credential-osxkeychain 2>/dev/null | grep -q '"ghcr.io"'; then
      return 0
    fi
  fi
  return 1
}

if has_ghcr_creds; then
  log "ghcr.io credentials already present in Keychain."
else
  login_ghcr || { err "Failed to login to ghcr.io."; exit 1; }
fi

log "Done: Docker Hub + ghcr.io auth configured; creds are in macOS Keychain."
{{- end -}}
