
{{- if and (eq .chezmoi.os "darwin") (.profile.dev) -}}
#!/usr/bin/env bash
set -euo pipefail

log()  { printf "\033[1;34m[docker-auth]\033[0m %s\n" "$*"; }
warn() { printf "\033[1;33m[warn]\033[0m %s\n" "$*"; }
err()  { printf "\033[1;31m[error]\033[0m %s\n" "$*" >&2; }

# --- Guards ------------------------------------------------------------------
command -v docker >/dev/null 2>&1 || { warn "docker not found; skipping auth."; exit 0; }
command -v docker-credential-osxkeychain >/dev/null 2>&1 \
  || { err "docker-credential-osxkeychain missing. Run the cred-helper build step first."; exit 1; }

# --- Helper probes (use `get` return codes; no brittle greps) ---------------
has_hub_creds() {
  docker-credential-osxkeychain get >/dev/null 2>&1 <<< '{"ServerURL":"https://index.docker.io/v1/"}'
}

has_ghcr_creds() {
  docker-credential-osxkeychain get >/dev/null 2>&1 <<< '{"ServerURL":"https://ghcr.io"}' \
  || docker-credential-osxkeychain get >/dev/null 2>&1 <<< '{"ServerURL":"ghcr.io"}' \
  || docker-credential-osxkeychain get >/dev/null 2>&1 <<< '{"ServerURL":"https://ghcr.io/v2/"}'
}

store_ghcr() {
  # Store entries; treat "item already exists" as success (helper returns non-zero).
  local user="$1" secret="$2"
  local ok=0
  printf '{"ServerURL":"ghcr.io","Username":"%s","Secret":"%s"}' "$user" "$secret" \
    | docker-credential-osxkeychain store >/dev/null 2>&1 || ok=1
  printf '{"ServerURL":"https://ghcr.io","Username":"%s","Secret":"%s"}' "$user" "$secret" \
    | docker-credential-osxkeychain store >/dev/null 2>&1 || true
  printf '{"ServerURL":"https://ghcr.io/v2/","Username":"%s","Secret":"%s"}' "$user" "$secret" \
    | docker-credential-osxkeychain store >/dev/null 2>&1 || true
  # Re-check with `get`; if present, we consider it success
  has_ghcr_creds
}

# --- Docker Hub login (Keychain-verified) ------------------------------------
if ! has_hub_creds; then
  cat <<'NOTE'
Docker Hub login:
- You may be prompted for username/password or shown a device login flow.
- For password, a Docker Hub Access Token is recommended.
- Credentials will be stored in macOS Keychain (osxkeychain).
NOTE
  if docker login; then
    has_hub_creds \
      && log "Docker Hub login OK (credentials present in Keychain)." \
      || { warn "Login succeeded; Keychain entry not visible yet (continuing)."; }
  else
    err "Docker Hub login failed."
    exit 1
  fi
else
  log "Docker Hub credentials already present in Keychain."
fi

# --- GitHub CLI auth ---------------------------------------------------------
if command -v gh >/dev/null 2>&1; then
  if ! gh auth status >/dev/null 2>&1; then
    log "GitHub login (device flow; scopes: repo, read:packages)..."
    gh auth login -s "read:packages,repo" -w
  elif ! gh auth status -t 2>/dev/null | grep -q "read:packages"; then
    log "Refreshing GitHub token scopes..."
    gh auth refresh -s "read:packages,repo" -h github.com
  fi
  log "GitHub auth OK."
else
  warn "gh not found; skipping GitHub auth."
fi


# ---- Docker login to GitHub Container Registry (ghcr.io) --------------------
login_ghcr() {
  if command -v gh >/dev/null 2>&1 && gh auth status >/dev/null 2>&1; then
    GH_USER="$(gh api user --jq .login)"
    GH_TOKEN="$(gh auth token)"
    if [[ -n "${GH_USER:-}" && -n "${GH_TOKEN:-}" ]]; then
      log "Logging into ghcr.io as $GH_USER using gh token..."
      if echo "$GH_TOKEN" | docker login ghcr.io -u "$GH_USER" --password-stdin; then
        log "ghcr.io login OK (stored in Keychain)."
        return 0
      fi
    fi
  fi
  cat <<'MSG'
GitHub Container Registry (ghcr.io) login:
- Username: your GitHub username
- Password: a GitHub **Personal Access Token** with 'read:packages'
Credentials will be stored securely in macOS Keychain.
MSG
  docker login ghcr.io || return 1
  log "ghcr.io login OK (stored in Keychain)."
  return 0
}

has_ghcr_creds() {
  # Ask helper whether ghcr.io entry exists
  if command -v docker-credential-osxkeychain >/dev/null 2>&1; then
    if printf "list\n" | docker-credential-osxkeychain 2>/dev/null | grep -q '"ghcr.io"'; then
      return 0
    fi
  fi
  return 1
}

if has_ghcr_creds; then
  log "ghcr.io credentials already present in Keychain."
else
  login_ghcr || { err "Failed to login to ghcr.io."; exit 1; }
fi

log "Done: Docker Hub + ghcr.io auth configured; creds are in macOS Keychain."
{{- end -}}
